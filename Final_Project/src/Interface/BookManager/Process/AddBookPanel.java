/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.BookManager.Process;

import Business.Book.Book;
import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author yanhongchen
 */
    
public class AddBookPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddBookPanel
     */
    private javax.swing.JPanel rightPanel;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    private EcoSystem system;
    private boolean addImagePathBtnClicked = false;  
    public AddBookPanel(EcoSystem system, JPanel rightPanel) {
        initComponents();
        this.system = system;
        this.rightPanel = rightPanel;

    }
    
    public int getBookID(){
         int bookID = 1111111;
         ArrayList<Integer> bookIDlist = new ArrayList<>();
         for(Book book : system.getBookDirectory().getBookList()){
             bookIDlist.add(book.getBookID());
         }
         if(bookIDlist.isEmpty()){
             return bookID;
         }else{
             Collections.sort(bookIDlist);
             int newBookID = bookIDlist.get(bookIDlist.size()-1)+1;
             return newBookID;
         }
    }
    
    public  void  copyFile(String  oldPath,  String  newPath)  {  
       try  {   
           int  byteread  =  0;  
           File  oldfile  =  new  File(oldPath);  
           if  (oldfile.exists())  {    
               InputStream  inStream  =  new  FileInputStream(oldPath);   
               FileOutputStream  fs  =  new  FileOutputStream(newPath);  
               byte[]  buffer  =  new  byte[1444];  
               while  (  (byteread  =  inStream.read(buffer))  !=  -1)  {   
                   fs.write(buffer,  0,  byteread);  
               }  
               inStream.close();  
           }  
       }  
       catch  (Exception  e)  {  
           System.out.println("copy error");  
           e.printStackTrace();  
       }  
   } 
    
    public  ArrayList<String> checkImageName(){
        ArrayList<String> files = new ArrayList<String>();
        File file = new File("ItemPictures");
        File[] tempList = file.listFiles();
        for (int i = 0; i < tempList.length; i++) {
            if (tempList[i].isFile()) {
 //             System.out.println("imageNameï¼š" + tempList[i]);
                files.add(tempList[i].toString());
            }
        }
        return files;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        bookNameTxt = new javax.swing.JTextField();
        bookAuthorTxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionTextArea = new javax.swing.JTextArea();
        returnBtn = new javax.swing.JButton();
        addBookBtn = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        addImagePathBtn = new javax.swing.JButton();
        bookImageLabel = new javax.swing.JLabel();
        imagePathLabel = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel1.setText("Add new book");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 30, 140, 45));

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel6.setText("Book  Name:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, -1, 30));

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel7.setText("Book  Author:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 130, 100, 30));

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel8.setText("Description:");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 190, -1, 30));

        bookNameTxt.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        add(bookNameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 100, 330, -1));

        bookAuthorTxt.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        add(bookAuthorTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 130, 330, -1));

        descriptionTextArea.setColumns(20);
        descriptionTextArea.setRows(5);
        jScrollPane1.setViewportView(descriptionTextArea);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 230, 310, 140));

        returnBtn.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        returnBtn.setText("<<Return");
        returnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBtnActionPerformed(evt);
            }
        });
        add(returnBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 400, -1, -1));

        addBookBtn.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        addBookBtn.setText("Add Book");
        addBookBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBookBtnActionPerformed(evt);
            }
        });
        add(addBookBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 400, -1, -1));

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel9.setText("Book  Image Path:");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 160, 130, 30));

        addImagePathBtn.setText("Add Image Path");
        addImagePathBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addImagePathBtnActionPerformed(evt);
            }
        });
        add(addImagePathBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 190, -1, 30));

        bookImageLabel.setBackground(new java.awt.Color(102, 102, 102));
        bookImageLabel.setForeground(new java.awt.Color(153, 153, 153));
        bookImageLabel.setBorder(javax.swing.BorderFactory.createTitledBorder("Book Image: "));
        add(bookImageLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 236, 110, 130));

        imagePathLabel.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        imagePathLabel.setText("Please click 'add image path' buttom.");
        add(imagePathLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 167, -1, 20));
    }// </editor-fold>//GEN-END:initComponents

    private void addBookBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBookBtnActionPerformed
        // TODO add your handling code here:
        if(bookAuthorTxt.getText().isEmpty()||bookNameTxt.getText().isEmpty()
          || descriptionTextArea.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Empty content, Please recreate!");
            return;
        }
        if(!imagePathLabel.getText().equals("Please click 'add image path' buttom.")){
            addImagePathBtnClicked = true;
        }
        if(!addImagePathBtnClicked){
            JOptionPane.showMessageDialog(null, "Please select image path");
            return;
        }
        int bookID = getBookID();
        String bookAuthor = bookAuthorTxt.getText();
        String bookName = bookNameTxt.getText();
        for(Book book : system.getBookDirectory().getBookList()){
        if(bookName.equals(book.getTitle())){
            JOptionPane.showMessageDialog(null, "This book already exists, Please return to previous page and select button of upadte "); 
            return;
            }
        }
        String bookDescription = descriptionTextArea.getText();
        String bookImagePath =  imagePathLabel.getText();
        Book book = new Book(bookID,bookName,bookAuthor,bookDescription);
        book.setPicture(bookImagePath);
        system.getBookDirectory().getBookList().add(book);
        dB4OUtil.storeSystem(system);   
        JOptionPane.showMessageDialog(null, "Book added Successfully");
        bookAuthorTxt.setText("");
        bookNameTxt.setText("");
        descriptionTextArea.setText("");
        imagePathLabel.setText("Please click 'add image path' buttom.");
        bookImageLabel.setIcon(null);
    }//GEN-LAST:event_addBookBtnActionPerformed

    private void returnBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnBtnActionPerformed
        // TODO add your handling code here:
        rightPanel.remove(this);
        Component[] componentArray = rightPanel.getComponents();
        Component component = componentArray[componentArray.length - 1];
        EnterpriseBookListPanel applicationBookListPanel = (EnterpriseBookListPanel) component;
        applicationBookListPanel.refreshTable();
        CardLayout layout = (CardLayout) rightPanel.getLayout();
        layout.previous(rightPanel);
    }//GEN-LAST:event_returnBtnActionPerformed

    private void addImagePathBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addImagePathBtnActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int i = chooser.showOpenDialog(null);
        if(i == chooser.APPROVE_OPTION){
            String imagePath = chooser.getSelectedFile().getAbsolutePath();
            String imageName = chooser.getSelectedFile().getName();
            String finalImagePath = "ItemPictures/" + imageName;
            ArrayList<String> imageNameList = checkImageName();
            if(imageNameList.contains(finalImagePath)){
                JOptionPane.showMessageDialog(null, "This image name already exists. Please change the image name and reselect");
                imagePathLabel.setText("Please click 'add image' buttom.");
                return;
            }else{
                System.out.println(finalImagePath);
                copyFile(imagePath,finalImagePath);
                imagePathLabel.setText(finalImagePath);
                ImageIcon icon= new ImageIcon(finalImagePath);
                icon.setImage(icon.getImage().getScaledInstance(85, 100, Image.SCALE_DEFAULT));
                bookImageLabel.setIcon(icon);
            }
        }
        else{
        System.out.println("unable to find out");
        }
    }//GEN-LAST:event_addImagePathBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBookBtn;
    private javax.swing.JButton addImagePathBtn;
    private javax.swing.JTextField bookAuthorTxt;
    private javax.swing.JLabel bookImageLabel;
    private javax.swing.JTextField bookNameTxt;
    private javax.swing.JTextArea descriptionTextArea;
    private javax.swing.JLabel imagePathLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton returnBtn;
    // End of variables declaration//GEN-END:variables
}
