/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Employee;

import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.BookRecycleEnterprise;
import Business.Enterprise.Enterprise;
import Business.Item.SecondItem;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.SalesOrganization;
import Business.WorkQueue.PriceToSalesWorkRequest;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author chenchen
 */
public class BookPricingPanel extends javax.swing.JPanel {

    private javax.swing.JPanel rightPanel;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    private EcoSystem system;
    private Employee employee;
    private Organization organization;
    private BookRecycleEnterprise b;
    private Network network;
    ArrayList<SecondItem> seList = new ArrayList<>();
    /**
     * Creates new form BookPricingPanel
     */
    public BookPricingPanel(EcoSystem system, Employee employee, javax.swing.JPanel rightPanel) {
        initComponents();
        this.system = system;
        this.employee = employee;
        this.organization = employee.getOrg();
        this.rightPanel = rightPanel;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbBook = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        lbPrice = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        btnSet = new javax.swing.JButton();
        btnSales = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();

        tbBook.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title", "Author", "Quantity", "Price"
            }
        ));
        jScrollPane1.setViewportView(tbBook);

        btnBack.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lbPrice.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lbPrice.setText("Set Price : ");

        btnSet.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnSet.setText("Set");
        btnSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetActionPerformed(evt);
            }
        });

        btnSales.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnSales.setText("Send To Sales");
        btnSales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalesActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 582, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75)
                                .addComponent(btnSet, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSales, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(btnBack)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbPrice)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSet))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSales)
                    .addComponent(btnClear))
                .addContainerGap(68, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        rightPanel.remove(this);
        CardLayout cl = (CardLayout) rightPanel.getLayout();
        cl.previous(rightPanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalesActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbBook.getSelectedRow();
        SecondItem selectedItem;
        if(selectedRow>=0){
            selectedItem = (SecondItem) tbBook.getValueAt(selectedRow, 0);
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select a row!", "Alert", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(selectedItem.getStatus().equals("Completed")){
            JOptionPane.showMessageDialog(null, "Request of The item has been sent!", "Alert", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(selectedItem.getPrice()==0){
            JOptionPane.showMessageDialog(null, "The item should be set price first!", "Alert", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String title = selectedItem.getTitle();
        String author = selectedItem.getAuthor();
        int quan = selectedItem.getQuantity();
        double price = selectedItem.getPrice();
        PriceToSalesWorkRequest re = new PriceToSalesWorkRequest();
        re.setMessage(title+"; "+author+"; "+quan+"; "+price);
        re.setSender(organization);
        SalesOrganization or = null;
        for(Enterprise en :network.getEnterpriseDirectory().getEnterpriseList()){
            for(Organization o : en.getOrganizationDirectory().getOrganizationList()){
                if(o.getType().equals(Organization.Type.Sales)){
                    or = (SalesOrganization)o;
                }
            }
        }
        if(or==null){
            JOptionPane.showMessageDialog(null, "Function Not Available Now!", "Alert", JOptionPane.ERROR_MESSAGE);
            return;
        }
        re.setReceiver(or);
        Date now = new Date();
        SimpleDateFormat formatter = new SimpleDateFormat("MM-dd-yyyy");
        String date = formatter.format(now);
        re.setRequestDate(date);
        re.setSeItem(selectedItem);
        organization.getWorkQueue().getWorkRequestList().add(re);
        or.getWorkQueue().getWorkRequestList().add(re);
        
        selectedItem.setStatus("Completed");
        dB4OUtil.storeSystem(system);
        JOptionPane.showMessageDialog(null, "Send Request Successfully");
        populateTable();
    }//GEN-LAST:event_btnSalesActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        boolean isExist = false;
        if(seList.size()>0){
            for(SecondItem si : seList){
                if(si.getStatus().equals("Completed")){
                    b.getReItemList().remove(si);
                    isExist = true;
                }
            }
        }
        if(!isExist){
            JOptionPane.showMessageDialog(null, "No item can be clear!", "Alert", JOptionPane.ERROR_MESSAGE);
            return;
        }
        dB4OUtil.storeSystem(system);
        JOptionPane.showMessageDialog(null, "Clear Successfully");
        populateTable();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbBook.getSelectedRow();
        SecondItem selectedItem;
        if(selectedRow>=0){
            selectedItem = (SecondItem) tbBook.getValueAt(selectedRow, 0);
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select a row!", "Alert", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String pricestr = txtPrice.getText();
        double price = 0;
        try{
            price = Double.parseDouble(pricestr);
        } catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price field only accept Double!", "Alert", JOptionPane.ERROR_MESSAGE);
            return;
        }
        selectedItem.setPrice(price);
        dB4OUtil.storeSystem(system);
        JOptionPane.showMessageDialog(null, "Set Successfully");
        txtPrice.setText("");
        populateTable();
    }//GEN-LAST:event_btnSetActionPerformed

    public void populateTable(){
        DefaultTableModel dtm = (DefaultTableModel) tbBook.getModel();
        dtm.setRowCount(0);
        for(Network net : system.getNetworkList()){
            for(Enterprise en : net.getEnterpriseDirectory().getEnterpriseList()){
                for(Organization or : en.getOrganizationDirectory().getOrganizationList()){
                    if(or.equals(organization)){
                        network = net;
                        b = (BookRecycleEnterprise)en;
                        if(b.getReItemList().size()>0){
                            for(SecondItem sei : b.getReItemList()){
                                seList.add(sei);
                                Object row[] = new Object[4];
                                row[0] = sei;
                                row[1] = sei.getAuthor();
                                row[2] = sei.getQuantity();
                                row[3] = sei.getPrice();
                                dtm.addRow(row);
                            }
                        }
                    }
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnSales;
    private javax.swing.JButton btnSet;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbPrice;
    private javax.swing.JTable tbBook;
    private javax.swing.JTextField txtPrice;
    // End of variables declaration//GEN-END:variables
}
