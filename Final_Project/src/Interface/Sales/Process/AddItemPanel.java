/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Sales.Process;

import Business.Book.Book;
import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.BookStoreEnterprise;
import Business.Enterprise.Enterprise;
import Business.Item.Item;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author yanhongchen
 */
    
public class AddItemPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddBookPanel
     */
    private javax.swing.JPanel rightPanel;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    private EcoSystem system;
    private BookStoreEnterprise bookStoreEnterprise;
    private boolean addImagePathBtnClicked = false;
    private Employee employee;
    public AddItemPanel(EcoSystem system, BookStoreEnterprise bookStoreEnterprise,Employee employee, JPanel rightPanel) {
        initComponents();
        this.system = system;
        this.rightPanel = rightPanel;
        this.bookStoreEnterprise = bookStoreEnterprise;
        this.employee=employee;
        desArea.setLineWrap(true);
        desArea.setWrapStyleWord(true);
    }
    
    public int getItemID(){
        int originItemID = 1;
        ArrayList<Integer> itemIDList = new ArrayList<Integer>();
        if(bookStoreEnterprise.getItemDirectory().getBookList().isEmpty()){
           return originItemID;
        }else{
        for(Item itemList : bookStoreEnterprise.getItemDirectory().getBookList()) {
            itemIDList.add(itemList.getItemID());
        }
        Collections.sort(itemIDList);
        int i = itemIDList.get(itemIDList.size()-1);
        return i+1;
       }
    }
    
    public  void  copyFile(String  oldPath,  String  newPath)  {  
       try  {   
           int  byteread  =  0;  
           File  oldfile  =  new  File(oldPath);  
           if  (oldfile.exists())  {    
               InputStream  inStream  =  new  FileInputStream(oldPath);   
               FileOutputStream  fs  =  new  FileOutputStream(newPath);  
               byte[]  buffer  =  new  byte[1444];  
               while  (  (byteread  =  inStream.read(buffer))  !=  -1)  {   
                   fs.write(buffer,  0,  byteread);  
               }  
               inStream.close();  
           }  
       }  
       catch  (Exception  e)  {  
           System.out.println("copy error");  
           e.printStackTrace();  
       }  
 
   } 
    public  ArrayList<String> checkImageName(){
        ArrayList<String> files = new ArrayList<String>();
        File file = new File("ItemPictures");
        File[] tempList = file.listFiles();
        for (int i = 0; i < tempList.length; i++) {
            if (tempList[i].isFile()) {
                files.add(tempList[i].toString());
            }
        }
        return files;
    }

   public Organization findOrganization(){
        for(Network network : system.getNetworkList() ){
            for(Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
                for(Organization organization :enterprise.getOrganizationDirectory().getOrganizationList()){
                    for(Employee employee : organization.getEmployeeDirectory().getEmployeeList()){
                       if(this.employee.getId() == employee.getId()){
                            return organization;
                            
                       }
                    }
                }
            } 
        }
        return null;
    }
   
   public void deleteImage(String imagePath){
        try{
            File file = new File(imagePath);
            if(file.delete()){
                System.out.println(file.getName() + " deleted successfully！");
            }else{
                System.out.println("File deletion failed！");
            }
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        ItemQuantityTxt = new javax.swing.JTextField();
        ItemPriceTxt = new javax.swing.JTextField();
        bookNameTxt = new javax.swing.JTextField();
        bookAuthorTxt = new javax.swing.JTextField();
        returnBtn = new javax.swing.JButton();
        addItemBtn = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        addImagePathBtn = new javax.swing.JButton();
        ItemImageLabel = new javax.swing.JLabel();
        imagePathLabel = new javax.swing.JLabel();
        ItemTypeComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        desArea = new javax.swing.JTextArea();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel1.setText("Add Item");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, 90, 45));

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel4.setText("Quantity:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 100, -1, 30));

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel5.setText("Price:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 140, -1, 30));

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel6.setText("Book  Name:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, -1, 30));

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel7.setText("Book  Author:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, 100, 30));

        ItemQuantityTxt.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        add(ItemQuantityTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 100, 120, -1));

        ItemPriceTxt.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        add(ItemPriceTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 140, 120, -1));

        bookNameTxt.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        add(bookNameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 100, 130, -1));

        bookAuthorTxt.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        add(bookAuthorTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 140, 130, -1));

        returnBtn.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        returnBtn.setText("<<Return");
        returnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBtnActionPerformed(evt);
            }
        });
        add(returnBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 370, 140, -1));

        addItemBtn.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        addItemBtn.setText("Add Item");
        addItemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemBtnActionPerformed(evt);
            }
        });
        add(addItemBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 320, 140, -1));

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel9.setText("Item Image Path:");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 180, 130, 40));

        addImagePathBtn.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        addImagePathBtn.setText("Add Image");
        addImagePathBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addImagePathBtnMouseClicked(evt);
            }
        });
        addImagePathBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addImagePathBtnActionPerformed(evt);
            }
        });
        add(addImagePathBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 270, 140, 30));

        ItemImageLabel.setBackground(new java.awt.Color(102, 102, 102));
        ItemImageLabel.setForeground(new java.awt.Color(153, 153, 153));
        ItemImageLabel.setBorder(javax.swing.BorderFactory.createTitledBorder("Item Image: "));
        add(ItemImageLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 270, 110, 130));

        imagePathLabel.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        imagePathLabel.setText("Please click 'add image' buttom.");
        add(imagePathLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 230, -1, 20));

        ItemTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Fiction", "Nonfiction", "Drama", "Poetry" }));
        ItemTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemTypeComboBoxActionPerformed(evt);
            }
        });
        add(ItemTypeComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 190, 130, -1));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel2.setText("Type:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 190, -1, -1));

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel3.setText("Description:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 230, -1, -1));

        desArea.setColumns(20);
        desArea.setRows(5);
        jScrollPane1.setViewportView(desArea);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 260, 140, 140));
    }// </editor-fold>//GEN-END:initComponents

    private void addItemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemBtnActionPerformed
        // TODO add your handling code here:
        if(ItemQuantityTxt.getText().isEmpty()||bookAuthorTxt.getText().isEmpty()||bookNameTxt.getText().isEmpty()
          || ItemPriceTxt.getText().isEmpty()||desArea.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Empty content, Please recreate!");
            return;
        }
        if(!imagePathLabel.getText().equals("Please click 'add image' buttom.")){
            addImagePathBtnClicked = true;
        }
        if(!addImagePathBtnClicked){
            JOptionPane.showMessageDialog(null, "Please select image path");
            return;
        }
        try{
           Double.parseDouble(ItemPriceTxt.getText());  
           Integer.parseInt(ItemQuantityTxt.getText()); 
        }
        catch(NumberFormatException e){    
            JOptionPane.showMessageDialog(null, "The bookPrice and bookQuantity of the item must be number !");  
            return;
        }
        int itemID = getItemID();
        int bookQuantity = Integer.valueOf(ItemQuantityTxt.getText());
        String bookAuthor = bookAuthorTxt.getText();
        String bookName = bookNameTxt.getText();
        for(Item item: bookStoreEnterprise.getItemDirectory().getBookList()){
        if(bookName.equals(item.getBook().getTitle())){
            JOptionPane.showMessageDialog(null, "This book already exists, Please return to previous page and select button of upadte "); 
            return;
            }
        }
        String description = desArea.getText();
        Double bookPrice = Double.valueOf(ItemPriceTxt.getText());
        String bookType =String.valueOf(ItemTypeComboBox.getSelectedItem());
        String bookImagePath = imagePathLabel.getText();
        ArrayList<String> bookAuthorList = new ArrayList<>();
        ArrayList<String> bookNameList = new ArrayList<>();
        for(Book b:system.getBookDirectory().getBookList()){                
                 bookAuthorList.add(b.getAuthor());
                 bookNameList.add(b.getTitle());      
            }       
        if(bookAuthorList.contains(bookAuthor)&&bookNameList.contains(bookName)){
            for(Book b:system.getBookDirectory().getBookList()){ 
                if(bookAuthor.equals(b.getAuthor()) && bookName.equals(b.getTitle())){
                Item item = new Item(itemID,bookQuantity,bookPrice,b);
                item.setPicture(bookImagePath);
                item.setType(bookType);
                item.setDescription(description);
                item.setEnterprise(bookStoreEnterprise);
                bookStoreEnterprise.getItemDirectory().getBookList().add(item);
                JOptionPane.showMessageDialog(null, "Item added Successfully");
                dB4OUtil.storeSystem(system);
                }
            } 
        }else{
            int selectionButton = JOptionPane.YES_NO_OPTION;
            int selectionResult = JOptionPane.showConfirmDialog(null, "This book does not exist, Do you require book manager to add new book?", "Warning", selectionButton);
            if(selectionResult == JOptionPane.YES_OPTION){
                String mes = "Please add "+bookName+" book, the author is "+bookAuthor+",the type is"+ bookType +" to book list, Thank you!";
                Organization organiz = new Organization(null) {};
                ArrayList<Organization> organizationList = new ArrayList<>();
                for(Organization org : bookStoreEnterprise.getOrganizationDirectory().getOrganizationList()){                  
                    if(String.valueOf(org.getType()).equals("BookManage")){
                        organizationList.add(org);
                    }
                }
                if(organizationList.isEmpty()){
                    JOptionPane.showMessageDialog(null, "unable to find proper organziation, plesase ask admin to create it.");
                    deleteImage(bookImagePath);
                    return;
                }else{
                    organiz=organizationList.get(0);
                }
                WorkRequest re = new WorkRequest();
                re.setMessage(mes);
                Organization originOrg = findOrganization();
                re.setSender(originOrg);
                re.setReceiver(organiz);
                Date now = new Date();
                SimpleDateFormat formatter = new SimpleDateFormat("MM-dd-yyyy");
                String date = formatter.format(now);
                re.setRequestDate(date);
                originOrg.getWorkQueue().getWorkRequestList().add(re);
                if(!originOrg.equals(organiz)){
                    organiz.getWorkQueue().getWorkRequestList().add(re);
                }
                dB4OUtil.storeSystem(system);
                JOptionPane.showMessageDialog(null, "Send Successfully");
                deleteImage(bookImagePath);
            }else{
                JOptionPane.showMessageDialog(null, "Thank you");
                deleteImage(bookImagePath);
                ItemQuantityTxt.setText("");
                bookAuthorTxt.setText("");
                bookNameTxt.setText("");
                ItemPriceTxt.setText("");
                desArea.setText("");
                imagePathLabel.setText("Please click 'add image' buttom.");
                ItemImageLabel.setIcon(null);
                return;
            }   
        }
        ItemQuantityTxt.setText("");
        bookAuthorTxt.setText("");
        bookNameTxt.setText("");
        ItemPriceTxt.setText("");
        desArea.setText("");
        imagePathLabel.setText("Please click 'add image' buttom.");
        ItemImageLabel.setIcon(null);
       
    }//GEN-LAST:event_addItemBtnActionPerformed

    private void returnBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnBtnActionPerformed
        // TODO add your handling code here:
        rightPanel.remove(this);
        Component[] componentArray = rightPanel.getComponents();
        Component component = componentArray[componentArray.length - 1];
        BookStoreItemListPanel bookStoreBookListPanel = (BookStoreItemListPanel) component;
        bookStoreBookListPanel.refreshTable();
        CardLayout layout = (CardLayout) rightPanel.getLayout();
        layout.previous(rightPanel);
    }//GEN-LAST:event_returnBtnActionPerformed

    private void addImagePathBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addImagePathBtnActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int i = chooser.showOpenDialog(null);
        if(i == chooser.APPROVE_OPTION){
            String imagePath = chooser.getSelectedFile().getAbsolutePath();
            String imageName = chooser.getSelectedFile().getName();
            String finalImagePath = "ItemPictures/" + imageName;
            ArrayList<String> imageNameList = checkImageName();
            if(imageNameList.contains(finalImagePath)){
                JOptionPane.showMessageDialog(null, "This image name already exists. Please change the image name and reselect");
                imagePathLabel.setText("Please click 'add image' buttom.");
                return;
            }else{
                System.out.println(finalImagePath);
                copyFile(imagePath,finalImagePath);
                imagePathLabel.setText(finalImagePath);
                ImageIcon icon= new ImageIcon(finalImagePath);
                icon.setImage(icon.getImage().getScaledInstance(85, 100, Image.SCALE_DEFAULT));
                ItemImageLabel.setIcon(icon);
            }
        }
        else{
        System.out.println("unable to find out");
        }
    }//GEN-LAST:event_addImagePathBtnActionPerformed

    private void ItemTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemTypeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ItemTypeComboBoxActionPerformed

    private void addImagePathBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addImagePathBtnMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_addImagePathBtnMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ItemImageLabel;
    private javax.swing.JTextField ItemPriceTxt;
    private javax.swing.JTextField ItemQuantityTxt;
    private javax.swing.JComboBox ItemTypeComboBox;
    private javax.swing.JButton addImagePathBtn;
    private javax.swing.JButton addItemBtn;
    private javax.swing.JTextField bookAuthorTxt;
    private javax.swing.JTextField bookNameTxt;
    private javax.swing.JTextArea desArea;
    private javax.swing.JLabel imagePathLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton returnBtn;
    // End of variables declaration//GEN-END:variables
}
