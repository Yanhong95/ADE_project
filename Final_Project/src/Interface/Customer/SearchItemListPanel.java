/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Customer;

import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Enterprise.BookStoreEnterprise;
import Business.Item.Item;
import Business.Order.Order;
import Business.Order.OrderItem;
import Business.UserAccount.User;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author chenchen
 */
public class SearchItemListPanel extends javax.swing.JPanel {

    private javax.swing.JPanel rightPanel;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    private EcoSystem system;
    private BookStoreEnterprise enterprise;
    private User user;
    private int connum;
    private String[] conditions;
    /**
     * Creates new form SearchItemListPanel
     */
    public SearchItemListPanel(EcoSystem system, BookStoreEnterprise enterprise, User user, int connum, String[] conditions, javax.swing.JPanel rightPanel) {
        initComponents();
        this.system = system;
        this.enterprise = enterprise;
        this.user = user;
        this.connum = connum;
        this.conditions = conditions;
        this.rightPanel = rightPanel;
        lbResult.setText("Search Results For You,  "+user.getUsername());
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        lbResult = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbResult = new javax.swing.JTable();
        btnView = new javax.swing.JButton();
        btnSecond = new javax.swing.JButton();

        btnBack.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lbResult.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lbResult.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbResult.setText("Search results for you, ");

        tbResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book Name", "Author", "Price", "Points"
            }
        ));
        jScrollPane1.setViewportView(tbResult);

        btnView.setText("View Details");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnSecond.setText("Seaech Second Hand Books");
        btnSecond.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSecondActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lbResult, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(95, 95, 95)
                                .addComponent(btnSecond, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 617, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(lbResult, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnView)
                    .addComponent(btnSecond))
                .addContainerGap(62, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        rightPanel.removeAll();
        ShoppingHomePanel panel = new ShoppingHomePanel(system,enterprise,user,rightPanel);
        rightPanel.add("ShoppingHomePanel", panel);
        CardLayout cl = (CardLayout) rightPanel.getLayout();
        cl.previous(rightPanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbResult.getSelectedRow();
        Item selectedItem;
        if(selectedRow>=0){
            selectedItem = (Item) tbResult.getValueAt(selectedRow, 0);
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select an item!", "Alert", JOptionPane.ERROR_MESSAGE);
            return;
        }
        ViewItemPanel panel = new ViewItemPanel(system,enterprise,user,selectedItem,"source search",rightPanel);
        rightPanel.add("ViewItemPanel", panel);
        CardLayout cl = (CardLayout) rightPanel.getLayout();
        cl.next(rightPanel);
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnSecondActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSecondActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) tbResult.getModel();
        dtm.setRowCount(0);
        
        ArrayList<Item> nameList = new ArrayList<>();
        ArrayList<Item> typeList = new ArrayList<>();
        ArrayList<Item> overallList = new ArrayList<>();
        if(connum == 1){
            if(conditions[0] == null){
                String objTitle = conditions[1];
                for(Item m : enterprise.getOldBookDirectory().getItemList()){
                    if(objTitle.equals(m.getBook().getTitle())){
                        overallList.add(m);
                    }
                }
            }
            else{
                String objType = conditions[0];
                for(Item m : enterprise.getOldBookDirectory().getItemList()){
                    if(objType.equals(m.getType())){
                        overallList.add(m);
                    }
                }
            }
            Collections.sort(overallList);
        }
        else{
            String objType = conditions[0];
            String objTitle = conditions[1];
            for(Item m : enterprise.getOldBookDirectory().getItemList()){
                if(objTitle.equals(m.getBook().getTitle())){
                    nameList.add(m);
                }
            }
            for(Item m : enterprise.getOldBookDirectory().getItemList()){
                if(objType.equals(m.getType()) && !objTitle.equals(m.getBook().getTitle())){
                    typeList.add(m);
                }
            }
            Collections.sort(nameList);
            Collections.sort(typeList);
            overallList.addAll(nameList);
            overallList.addAll(typeList);
        }
        for(Item item : overallList){
            Object row[] = new Object[4];
            row[0] = item;
            row[1] = item.getBook().getAuthor();
            row[2] = item.getPrice();
            row[3] = item.getRating();
            dtm.addRow(row);
        }
    }//GEN-LAST:event_btnSecondActionPerformed

    public void populateTable(){
        DefaultTableModel dtm = (DefaultTableModel) tbResult.getModel();
        dtm.setRowCount(0);
        
        ArrayList<Item> nameList = new ArrayList<>();
        ArrayList<Item> typeList = new ArrayList<>();
        ArrayList<Item> overallList = new ArrayList<>();
        if(connum == 1){
            if(conditions[0] == null){
                String objTitle = conditions[1];
                for(Item m : enterprise.getItemDirectory().getBookList()){
                    if(objTitle.equals(m.getBook().getTitle())){
                        overallList.add(m);
                    }
                }
            }
            else{
                String objType = conditions[0];
                for(Item m : enterprise.getItemDirectory().getBookList()){
                    if(objType.equals(m.getType())){
                        overallList.add(m);
                    }
                }
            }
            Collections.sort(overallList);
        }
        else{
            String objType = conditions[0];
            String objTitle = conditions[1];
            for(Item m : enterprise.getItemDirectory().getBookList()){
                if(objTitle.equals(m.getBook().getTitle())){
                    nameList.add(m);
                }
            }
            for(Item m : enterprise.getItemDirectory().getBookList()){
                if(objType.equals(m.getType()) && !objTitle.equals(m.getBook().getTitle())){
                    typeList.add(m);
                }
            }
            Collections.sort(nameList);
            Collections.sort(typeList);
            overallList.addAll(nameList);
            overallList.addAll(typeList);
        }
        for(Item item : overallList){
            double p = calPoints(item);
            item.setRating(p);
            Object row[] = new Object[4];
            row[0] = item;
            row[1] = item.getBook().getAuthor();
            row[2] = item.getPrice();
            row[3] = item.getRating();
            dtm.addRow(row);
        }
    }

    public double calPoints(Item item){
        List<Order> list = enterprise.getOrderList();
        System.out.println(list.size());
        double avePoint = 0;
        double totalPoint = 0;
        int num = 0;
        for(Order or : list){
            for(OrderItem oi : or.getOrderItemList()){
                if(item.equals(oi.getItem())){
                    totalPoint = totalPoint + oi.getRating();
                    num++;
                }
            }
        }
        if(num == 0){
            avePoint = 8;
        }
        else{
            avePoint = totalPoint/num;
        }
        return avePoint;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSecond;
    private javax.swing.JButton btnView;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbResult;
    private javax.swing.JTable tbResult;
    // End of variables declaration//GEN-END:variables
}
