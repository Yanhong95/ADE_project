/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Customer.Process;

import Business.Address.Address;
import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Role.Customer;
import Business.UserAccount.User;
import java.awt.CardLayout;
import javax.swing.JOptionPane;

/**
 *
 * @author chenchen
 */
public class EditAddressPanel extends javax.swing.JPanel {

    private javax.swing.JPanel rightPanel;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    private EcoSystem system;
    private User user;
    private Customer customer;
    private String saveType = "old";
    private Address mainAddress;
    /**
     * Creates new form EditAddressPanel
     */
    public EditAddressPanel(EcoSystem system, User user, javax.swing.JPanel rightPanel) {
        initComponents();
        this.system = system;
        this.user = user;
        this.customer = (Customer)user;
        this.rightPanel = rightPanel;
        showInfo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        lbOptions = new javax.swing.JLabel();
        cbOptions = new javax.swing.JComboBox();
        btnCheck = new javax.swing.JButton();
        lbName = new javax.swing.JLabel();
        lbStreet = new javax.swing.JLabel();
        lbCity = new javax.swing.JLabel();
        lbState = new javax.swing.JLabel();
        lbZip = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtStreet = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        txtState = new javax.swing.JTextField();
        txtZip = new javax.swing.JTextField();
        btnEdit = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnMain = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();

        btnBack.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lbOptions.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lbOptions.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbOptions.setText("'s All Addresses");

        cbOptions.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        btnCheck.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnCheck.setText("Check");
        btnCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckActionPerformed(evt);
            }
        });

        lbName.setText("Address Name: ");

        lbStreet.setText("Street Address: ");

        lbCity.setText("City: ");

        lbState.setText("State:");

        lbZip.setText("Zip: ");

        txtName.setEditable(false);

        txtStreet.setEditable(false);

        txtCity.setEditable(false);

        txtState.setEditable(false);

        txtZip.setEditable(false);

        btnEdit.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnAdd.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnAdd.setText("Add New Address");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnMain.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnMain.setText("Set Main Address");
        btnMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMainActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbOptions, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbOptions, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
            .addGroup(layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbName, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbStreet, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtStreet, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbCity, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbState, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbZip, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtZip, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(111, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMain, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE))
                .addGap(85, 85, 85))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(lbOptions, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbOptions, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbName, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbStreet, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStreet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbCity, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbState, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbZip, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEdit)
                    .addComponent(btnAdd))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMain)
                    .addComponent(btnSave))
                .addContainerGap(34, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        rightPanel.remove(this);
        CustomerInfoManagePanel panel = new CustomerInfoManagePanel(system,user,rightPanel);
        rightPanel.add("CustomerInfoManagePanel", panel);
        CardLayout cl = (CardLayout) rightPanel.getLayout();
        cl.previous(rightPanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckActionPerformed
        // TODO add your handling code here:
        Address selectedAddr = (Address)cbOptions.getSelectedItem();
        if(selectedAddr == null){
            JOptionPane.showMessageDialog(null, "No Address Exist!", "Alert", JOptionPane.ERROR_MESSAGE);
            return;
        }
        txtName.setText(selectedAddr.getAddressName());
        txtStreet.setText(selectedAddr.getStreet());
        txtCity.setText(selectedAddr.getCity());
        txtState.setText(selectedAddr.getState());
        txtZip.setText(String.valueOf(selectedAddr.getZip()));
        txtName.setEditable(false);
        txtStreet.setEditable(false);
        txtCity.setEditable(false);
        txtState.setEditable(false);
        txtZip.setEditable(false);
        mainAddress = selectedAddr;
    }//GEN-LAST:event_btnCheckActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        if(mainAddress == null){
            JOptionPane.showMessageDialog(null, "No Address Exist!", "Alert", JOptionPane.ERROR_MESSAGE);
            return;
        }
        txtName.setEditable(true);
        txtStreet.setEditable(true);
        txtCity.setEditable(true);
        txtState.setEditable(true);
        txtZip.setEditable(true);
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        int num = customer.getAddressDirectory().size();
        txtName.setText("Address "+(num+1));
        txtStreet.setText("");
        txtCity.setText("");
        txtState.setText("");
        txtZip.setText("");
        saveType = "new";
        txtName.setEditable(true);
        txtStreet.setEditable(true);
        txtCity.setEditable(true);
        txtState.setEditable(true);
        txtZip.setEditable(true);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMainActionPerformed
        // TODO add your handling code here:
        if(mainAddress == null){
            JOptionPane.showMessageDialog(null, "No Address Exist!", "Alert", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Address main = mainAddress;
        customer.getAddressDirectory().remove(mainAddress);
        customer.getAddressDirectory().add(0, main);
        dB4OUtil.storeSystem(system);
        txtName.setEditable(false);
        txtStreet.setEditable(false);
        txtCity.setEditable(false);
        txtState.setEditable(false);
        txtZip.setEditable(false);
        JOptionPane.showMessageDialog(null, "Set Successfully");
    }//GEN-LAST:event_btnMainActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        String name = txtName.getText();
        String street = txtStreet.getText();
        String city = txtCity.getText();
        String state = txtState.getText();
        String zip = txtZip.getText();
        if(name.equals("")||street.equals("")||city.equals("")||state.equals("")||zip.equals("")){
            JOptionPane.showMessageDialog(null, "All Fields can not be Empty!", "Alert", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int zipcode;
        try{
            zipcode = Integer.parseInt(zip);
        } catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Zip Field only accepts Integer!", "Alert", JOptionPane.ERROR_MESSAGE);
            txtZip.setText("");
            return;
        }
        
        if(saveType.equals("new")){
            for(Address ad:customer.getAddressDirectory()){
                if(name.equals(ad.getAddressName())){
                    JOptionPane.showMessageDialog(null, "Address has already exist!", "Alert", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            Address newAddr = new Address(name,street,city,state,zipcode);
            customer.getAddressDirectory().add(newAddr);
            mainAddress = newAddr;
        }
        else{
            for(Address ad:customer.getAddressDirectory()){
                if(name.equals(ad.getAddressName()) && !name.equals(mainAddress.getAddressName())){
                    JOptionPane.showMessageDialog(null, "Address has already exist!", "Alert", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            mainAddress.setAddressName(name);
            mainAddress.setStreet(street);
            mainAddress.setCity(city);
            mainAddress.setState(state);
            mainAddress.setZip(zipcode);
        }
        dB4OUtil.storeSystem(system);
        txtName.setEditable(false);
        txtStreet.setEditable(false);
        txtCity.setEditable(false);
        txtState.setEditable(false);
        txtZip.setEditable(false);
        JOptionPane.showMessageDialog(null, "Save Successfully");
        showInfo();
    }//GEN-LAST:event_btnSaveActionPerformed

    public void showInfo(){
        lbOptions.setText(user.getUsername()+"'s List of Addresses");
        cbOptions.removeAllItems();
        for(Address ad : customer.getAddressDirectory()){
            cbOptions.addItem(ad);
        }
        if(customer.getAddressDirectory().size()>0){
            txtName.setText(String.valueOf(customer.getAddressDirectory().get(0)));
            txtStreet.setText(customer.getAddressDirectory().get(0).getStreet());
            txtCity.setText(customer.getAddressDirectory().get(0).getCity());
            txtState.setText(customer.getAddressDirectory().get(0).getState());
            txtZip.setText(String.valueOf(customer.getAddressDirectory().get(0).getZip()));
            this.mainAddress = customer.getAddressDirectory().get(0);
        }
        else{
            txtName.setText("");
            txtStreet.setText("");
            txtCity.setText("");
            txtState.setText("");
            txtZip.setText("");
            this.mainAddress = null;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCheck;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnMain;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox cbOptions;
    private javax.swing.JLabel lbCity;
    private javax.swing.JLabel lbName;
    private javax.swing.JLabel lbOptions;
    private javax.swing.JLabel lbState;
    private javax.swing.JLabel lbStreet;
    private javax.swing.JLabel lbZip;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtState;
    private javax.swing.JTextField txtStreet;
    private javax.swing.JTextField txtZip;
    // End of variables declaration//GEN-END:variables
}
