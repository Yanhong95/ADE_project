/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Customer;

import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Enterprise.BookRecycleEnterprise;
import Business.Enterprise.Enterprise;
import Business.Item.SecondItem;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.RecyclingOrganization;
import Business.Role.Customer;
import Business.UserAccount.User;
import Business.WorkQueue.BookRecycleWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author chenchen
 */
public class CustomerSellPanel extends javax.swing.JPanel {

    private javax.swing.JPanel rightPanel;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    private EcoSystem system;
    private User user;
    private Customer cus;
    private Network network;
    private BookRecycleEnterprise enterprise;
    /**
     * Creates new form CustomerSellPanel
     */
    public CustomerSellPanel(EcoSystem system, BookRecycleEnterprise enterprise, User user, javax.swing.JPanel rightPanel) {
        initComponents();
        this.system = system;
        this.enterprise = enterprise;
        this.user = user;
        this.cus = (Customer)user;
        this.rightPanel = rightPanel;
        lbTop.setText("Welcome to recycle your books,  "+user.getUsername());
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        lbTop = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbBook = new javax.swing.JTable();
        lbTitle = new javax.swing.JLabel();
        txtTitle = new javax.swing.JTextField();
        lbAuthor = new javax.swing.JLabel();
        txtAuthor = new javax.swing.JTextField();
        lbQuan = new javax.swing.JLabel();
        txtQuan = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnSubmit = new javax.swing.JButton();

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lbTop.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lbTop.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTop.setText("Welcome to recycle your books, ");

        tbBook.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title", "Author", "Quantity", "Status"
            }
        ));
        jScrollPane1.setViewportView(tbBook);

        lbTitle.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lbTitle.setText("Title: ");

        lbAuthor.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lbAuthor.setText("Author: ");

        lbQuan.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lbQuan.setText("Quantity: ");

        btnAdd.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnAdd.setText("Add to List");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnDelete.setText("Delete Book");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnSubmit.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(193, 193, 193)
                        .addComponent(lbTop, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lbQuan)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtQuan, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(btnSubmit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lbAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(lbTop))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbAuthor)
                    .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTitle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbQuan)
                    .addComponent(txtQuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd))
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnSubmit))
                .addContainerGap(67, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        rightPanel.removeAll();
        CustomerHomePanel panel = new CustomerHomePanel(system,user,rightPanel);
        rightPanel.add("CustomerHomePanel", panel);
        CardLayout cl = (CardLayout) rightPanel.getLayout();
        cl.previous(rightPanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        String title = txtTitle.getText();
        if(title==null || title.equals("")){
            JOptionPane.showMessageDialog(null, "Title field can not be empty!", "Alert", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String author = txtAuthor.getText();
        if(author==null || author.equals("")){
            JOptionPane.showMessageDialog(null, "Author field can not be empty!", "Alert", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String strquan = txtQuan.getText();
        int quan = 0;
        try{
            quan = Integer.parseInt(strquan);
        } catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Quantity field only accept Integer!", "Alert", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        SecondItem si = new SecondItem();
        si.setTitle(title);
        si.setAuthor(author);
        si.setQuantity(quan);
        si.setOwnerID(user.getUserID());
        si.setStatus("UnSubmitted");
        cus.getSecondList().add(si);
        dB4OUtil.storeSystem(system);
        JOptionPane.showMessageDialog(null, "Add Successfully");
        populateTable();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbBook.getSelectedRow();
        SecondItem selectedItem;
        if(selectedRow>=0){
            selectedItem = (SecondItem) tbBook.getValueAt(selectedRow, 0);
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select a row!", "Alert", JOptionPane.ERROR_MESSAGE);
            return;
        }
        cus.getSecondList().remove(selectedItem);
        dB4OUtil.storeSystem(system);
        JOptionPane.showMessageDialog(null, "Remove Successfully");
        populateTable();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        ArrayList<SecondItem> list = new ArrayList<>();
        if(cus.getSecondList().size()>0){
            for(SecondItem sim : cus.getSecondList()){
                if(sim.getStatus().equals("UnSubmitted")){
                    list.add(sim);
                }   
            }
        }
        if(list.size()<1){
            JOptionPane.showMessageDialog(null, "No book to be submitted!", "Alert", JOptionPane.ERROR_MESSAGE);
            return;
        }
        boolean isExist = false;
        System.out.print(enterprise.getType());
        for(Organization o : enterprise.getOrganizationDirectory().getOrganizationList()){
            if(o.getType().equals(Organization.Type.Recycling)){
                RecyclingOrganization og = (RecyclingOrganization)o;
                BookRecycleWorkRequest bwr = new BookRecycleWorkRequest();
                bwr.setMessage("check books from "+user.getUserID());
                bwr.setSender(o);
                bwr.setReceiver(o);
                Date now = new Date();
                SimpleDateFormat formatter = new SimpleDateFormat("MM-dd-yyyy");
                String date = formatter.format(now);
                bwr.setRequestDate(date);
                og.getWorkQueue().getWorkRequestList().add(bwr);
                isExist = true;
            }
            if(!isExist){
                JOptionPane.showMessageDialog(null, "Function Not Available Now!", "Alert", JOptionPane.ERROR_MESSAGE);
                isExist = false;
                return;
            }
        }
        enterprise.getReItemList().addAll(list);
        if(cus.getSecondList().size()>0){
            for(SecondItem sim : cus.getSecondList()){
                sim.setStatus("Submitted");  
            }
        }
        txtTitle.setText("");
        txtAuthor.setText("");
        txtQuan.setText("");
        dB4OUtil.storeSystem(system);
        JOptionPane.showMessageDialog(null, "Submit Successfully");
        populateTable();
    }//GEN-LAST:event_btnSubmitActionPerformed

    public void populateTable(){
        DefaultTableModel dtm = (DefaultTableModel) tbBook.getModel();
        dtm.setRowCount(0);
        if(cus.getSecondList().size()>0){
            for(SecondItem sei : cus.getSecondList()){
                Object row[] = new Object[4];
                row[0] = sei;
                row[1] = sei.getAuthor();
                row[2] = sei.getQuantity();
                row[3] = sei.getStatus();
                dtm.addRow(row);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbAuthor;
    private javax.swing.JLabel lbQuan;
    private javax.swing.JLabel lbTitle;
    private javax.swing.JLabel lbTop;
    private javax.swing.JTable tbBook;
    private javax.swing.JTextField txtAuthor;
    private javax.swing.JTextField txtQuan;
    private javax.swing.JTextField txtTitle;
    // End of variables declaration//GEN-END:variables
}
